name: Deploy Laravel para public_html via FTP

on:
  push:
    branches:
    - main

jobs:
  deploy:
    name: Deploy Laravel via FTP
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Obter código mais recente
      uses: actions/checkout@v3

    - name: 🧹 Limpar cache do runner
      run: rm -rf ~/.npm ~/.cache ~/.ssh

    - name: 📦 Instalar dependências do NPM
      run: npm install

    - name: 🔨 Compilar assets do frontend (Vite ou Laravel Mix)
      run: |
        if [ -f "vite.config.js" ]; then
          npm run build
        elif [ -f "webpack.mix.js" ]; then
          npm run prod
        else
          echo "Nenhuma configuração de build detectada. Pulando esta etapa."
        fi

    - name: 📂 Enviar arquivos via FTP (excluindo `vendor/`)
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ftp.starttofinish.com.br
        username: Jose_testes@starttofinish.com.br
        password: 29_Zezao_DevFull
        server-dir: public_html/
        local-dir: ./
        exclude: |
          **/.git*
          **/.env*
          **/node_modules/*
          **/tests/*
          **/database/*
          **/storage/*
          **/vendor/*
          vendor/**
          **/bootstrap/cache/*.php
          **/bootstrap/cache/*.json
          **/bootstrap/cache/*.config.php

    - name: 🔑 Configurar chave SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{secrets.SERVER}} >> ~/.ssh/known_hosts

    - name: 🚀 Executar comandos no servidor via SSH
      run: |
        ssh -i ~/.ssh/id_rsa ${{secrets.SSH_USER}} << 'EOF'
          cd public_html/

          echo "🔑 Criando arquivo .env..."
          echo "${{ secrets.ENV_FILE }}" > .env

          echo "📦 Instalando dependências..."
          composer install --no-dev --optimize-autoloader

          echo "🔄 Configurando ambiente..."
          mkdir -p storage bootstrap/cache
          php artisan storage:link
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear
          php artisan optimize

          echo "🛠️ Aplicando permissões..."
          chmod -R 775 storage bootstrap/cache public/storage
          chown -R www-data:www-data storage bootstrap/cache public/storage

          echo "🗄️ Migrando banco de dados..."
          php artisan migrate --force

          echo "✅ Deploy concluído! 1"
        EOF
